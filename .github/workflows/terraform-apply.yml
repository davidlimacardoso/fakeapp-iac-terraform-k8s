name: Terraform Apply

on:
  pull_request:
    branches:
      - main
      - stage
      - develop
  issue_comment:
    types: [created]

env:
  ENV: ${{ github.base_ref == 'main' && 'prod' || github.base_ref == 'stage' && 'stg' || github.base_ref == 'develop' && 'dev' || 'unknown' }}
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  AWS_ROLE: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/${{ secrets.AWS_ROLE }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  apply:
    if: >
      github.event_name == 'issue_comment' &&
      github.event.comment.body == '/apply'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write  
      contents: write
      
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:

      - name: Debug Github
        run: echo ${{ toJSON(github) }}

      - name: Notify Applying Settings
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = "\>\:rocket\: Applying the settings...";
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
              
      - name: Checkout code
        uses: actions/checkout@v3

      # get a PR number used to make the 'push' when merging
      - name: "Misc: get PR number"
        uses: jwalton/gh-find-current-pr@master
        id: findpr
        with:
          state: all

 # download artifact witjh the Terraform Plan file of the 'Terraform Test' workflow         
      - name: "Misc: Download Terraform Plan"
        uses: dawidd6/action-download-artifact@v3
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          # the Workflow to look for the artifact
          workflow: terraform-apply.yml
          # PR number used to generate the artifact and trigger this workflow
          pr: ${{ steps.findpr.outputs.pr }}
          # artifact's name
          name: file-${{ github.event.pull_request.number }}.tfplan
          path: terraform/
          # ensure we have the file in the workflow
          check_artifacts: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Refresh
        run: rm -rf .terraform

      - name: Terraform Init
        id: init
        run: terraform init
        
      - name: Terraform Workspace
        id: workspace
        run: |
          terraform workspace select ${{ env.ENV }} || terraform workspace new ${{ env.ENV }}

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -no-color file-${{ steps.findpr.outputs.pr }}.tfplan
        continue-on-error: true

      - name: Comment Apply Output
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const command = context.payload.comment.body;
            const outcome = "${{ steps.apply.outcome }}";
            const emoji = outcome === 'failure' ? ':x:' : ':white_check_mark:';
            const output = `#### Terraform Apply Output \`${outcome}\` ${emoji}
            \`\`\`\n
            ${{ steps.apply.outputs.stdout }} 
            ${{ steps.apply.outputs.stderr }}
            \`\`\`
            *Executed by: @${{ github.actor }}, Terraform command: \`${command}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      # - name: Merge Pull Request
      #   if: steps.apply.outcome == 'success'
      #   uses: actions/github-script@v6
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       await github.rest.pulls.merge({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         pull_number: context.issue.number,
      #         merge_method: 'merge'
      #       });
      - name: Hide Previous Comments
        if: steps.apply.outcome != 'success'
        uses: kanga333/comment-hider@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}